<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>深入React技术栈</title>
      <link href="/2019/04/25/react-tec-stack/"/>
      <url>/2019/04/25/react-tec-stack/</url>
      
        <content type="html"><![CDATA[<blockquote><p>React 之所以流行，在于它平衡了函数式编程（把 DOM 当成纯函数）的约束与工程师的实用主义（不强迫工程师只用函数式）。</p></blockquote><h2 id="1-1-简介"><a href="#1-1-简介" class="headerlink" title="1.1 简介"></a>1.1 简介</h2><ul><li>React 把真实 DOM 树转换成 JavaScript 对象树，也就是 Virtual DOM</li><li>Virtual DOM 提升了 React 的性能，但这并不是 React 的唯一亮点</li><li>最大的好处其实还在于方便和其他平台集成</li><li>函数式编程（对应与声明式编程）才是 React 的精髓</li></ul><h2 id="1-2-JSX"><a href="#1-2-JSX" class="headerlink" title="1.2 JSX"></a>1.2 JSX</h2><ul><li>中小写首字母对应 DOM 元素，而组件元素自然对应大写首字母</li><li>JSX 通过命名空间的方式使用组件元素，以解决组件相同名称冲突的问题，或是对一组组件进行归类（相当于大对象）</li><li>在一个组件的子元素位置使用注释要用 {} 包起来</li><li>class 属性改为 className；for 属性改为 htmlFor</li><li>在写自定义属性的时候，都由标准写法改为小驼峰写法</li><li>省略 Boolean 属性值会导致 JSX 认为 bool 值设为了 true，要传 false 时，必须使用属性表达式</li><li>要使用 HTML 自定义属性，要使用 data- 前缀</li><li>render 方法。它是 React组件生命周期的一部分，也是最核心的函数之一</li><li>属性值要使用表达式，只要用 {} 替换 “” 即可</li></ul><h2 id="1-3-React-组件"><a href="#1-3-React-组件" class="headerlink" title="1.3 React 组件"></a>1.3 React 组件</h2><ul><li>Web Components 通过自定义元素的方式实现组件化，而 React 的本质就是关心元素的构成，React 组件即为组件元素</li><li>组件元素被描述成纯粹的 JSON 对象，意味着可以使用方法或是类来构建</li><li>React 组件基本上由组件的构建方式、组件内的属性状态与生命周期方法组成</li></ul><p>React 组件的构建方法</p><ul><li>React.createClass</li><li>ES6 classes</li><li>无状态函数（stateless function</li></ul><h2 id="1-4-React-数据流"><a href="#1-4-React-数据流" class="headerlink" title="1.4 React 数据流"></a>1.4 React 数据流</h2><p>定义默认 props 配置<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> defaultProps = &#123;</span><br><span class="line">name: <span class="string">'lili'</span>,</span><br><span class="line">age: <span class="number">18</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p><a href="https://blog.csdn.net/suwu150/article/details/79460222" target="_blank" rel="noopener">propsTypes 类型检查</a><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> propsTypes = &#123;</span><br><span class="line"><span class="built_in">String</span>: React.PropTypes.string,</span><br><span class="line"><span class="built_in">Number</span>: React.PropTypes.number,</span><br><span class="line"><span class="built_in">Function</span>: React.PropTypes.func,</span><br><span class="line">children: React.PropTypes.oneOfType([</span><br><span class="line">React.PropTypes.arrayOf(React.PropTypes.node),</span><br><span class="line">React.PropTypes.node,</span><br><span class="line">]),</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>注意：函数类型的检查是 propTypes.func，布尔类型的检查是 propTypes.bool。</p><h2 id="1-5-React-生命周期"><a href="#1-5-React-生命周期" class="headerlink" title="1.5 React 生命周期"></a>1.5 React 生命周期</h2><p>React 组件的生命周期可以分为挂载、渲染和卸载。可以分两类：</p><ul><li>当组件在挂载或卸载时</li><li>当组件接受新的数据时，即组件更新时</li></ul><p><strong>组件的挂载</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component, PropTypes &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line"><span class="keyword">static</span> propTypes = &#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> defaultProps = &#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">constructor</span>(props) &#123;</span><br><span class="line"><span class="keyword">super</span>(props);</span><br><span class="line"><span class="keyword">this</span>.state = &#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">componentWillMount() &#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">componentDidMount() &#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">render() &#123;</span><br><span class="line"><span class="keyword">return</span> &lt;div&gt;This is a demo.&lt;/div&gt;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码中，propTypes 和 defaultProps 分别代表 props 类型检查和默认类型。这两个属性被声明成静态属性，意味着从类外面也可以访问它们。</p><p>其中 componentWillMount 方法会在 render 方法之前执行，而 componentDidMount 方法会在 render 方法之后执行。</p><p>读取初始 state 和 props 以及两个组件生命周期方法 componentWillMount 和 componentDidMount，这些都只会在组件初始化时运行一次。</p><p>在 componentWillMount 中执行 setState 方法毫无意义。初始化时的 state 都可以放在 this.state。</p><p><strong>组件的卸载</strong></p><p>组件卸载非常简单，只有 componentWillUnmount 这一个卸载前状态。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component, PropTypes &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">componentWillUnmount() &#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line">render() &#123;</span><br><span class="line"><span class="keyword">return</span> &lt;div&gt;This is a demo.&lt;/div&gt;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 componentWillUnmount 方法中，我们常常会执行一些清理方法，如事件回收或是清除定时器。</p><p><strong>数据更新过程</strong></p><p>更新过程指的是父组件向下传递 props 或组件自身执行 setState 方法时发生的一系列更新动作</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component, PropTypes &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">componentWillReceiveProps(nextProps) &#123;</span><br><span class="line"><span class="comment">// this.setState(&#123;&#125;)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">shouldComponentUpdate(nextProps, nextState) &#123;</span><br><span class="line"><span class="comment">// return true;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">componentWillUpdate(nextProps, nextState) &#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">componentDidUpdate(prevProps, prevState) &#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">render() &#123;</span><br><span class="line"><span class="keyword">return</span> &lt;div&gt;This is a demo.&lt;/div&gt;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>组件自身的 state 更新了，那么会依次执行 shouldComponentUpdate、componentWillUpdate 、render 和 componentDidUpdate。</p><p>shouldComponentUpdate 是一个特别的方法，它接收需要更新的 props 和 state，让开发者增加必要的条件判断，让其在需要时更新，不需要时不更新。因此，当方法返回 false 的时候，组件不再向下执行生命周期方法。</p><p>默认情况下，React 会渲染所有的节点，因为 shouldComponentUpdate 默认返回 true。</p><p>无状态组件是没有生命周期方法的，这也意味着它没有 shouldComponentUpdate。可以选择引用 Recompose 库的 pure 方法.</p><p>不能在 componentWillUpdate 中执行 setState。</p><p>componentWillReceiveProps 方法可以作为 React 在 props 传入后，渲染之前 setState 的机会。在此方法中调用 setState 是不会二次渲染的。</p><h2 id="1-6-React-和-DOM"><a href="#1-6-React-和-DOM" class="headerlink" title="1.6 React 和 DOM"></a>1.6 React 和 DOM</h2><p>在 React 组件的开发实现中，我们并不会用到 ReactDOM，只有在顶层组件以及由于 React 模型所限而不得不操作 DOM 的时候，才会使用它。</p><p><strong>ReactDOM 的 API</strong></p><ul><li>findDOMNode</li><li>render</li><li>unmountComponentAtNode</li></ul>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端书籍 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue 构建步骤</title>
      <link href="/2019/04/24/vue-build/"/>
      <url>/2019/04/24/vue-build/</url>
      
        <content type="html"><![CDATA[<h4 id="1、初始化项目"><a href="#1、初始化项目" class="headerlink" title="1、初始化项目"></a>1、初始化项目</h4><blockquote><p>  <code>npm i -g @vue/cli</code> 下载<a href="https://blog.csdn.net/wulala_hei/article/details/80488674" target="_blank" rel="noopener"><strong>vue-cli</strong></a>脚手架（点击进入了解vue-cli）</p><p>  <code>vue -V</code>查看版本号3.2.1（注意是大写-V）</p></blockquote><p>​    <code>npm init</code>得到<code>packjson.js</code>文件。</p><h4 id="2、下载node-modules"><a href="#2、下载node-modules" class="headerlink" title="2、下载node_modules"></a>2、下载node_modules</h4><p>​    <code>npm i</code>或者<code>cnpm i</code></p><h4 id="3、新建webpack配置文件"><a href="#3、新建webpack配置文件" class="headerlink" title="3、新建webpack配置文件"></a>3、新建webpack配置文件</h4><blockquote><p>  新建<code>webpack.config.js</code>并配置webpack如下：</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack  配置</span></span><br><span class="line"><span class="comment">// 入口</span></span><br><span class="line"><span class="comment">// 出口</span></span><br><span class="line"><span class="comment">// 规则</span></span><br><span class="line"><span class="comment">// 插件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// js  / png / scss/less/css</span></span><br><span class="line"><span class="comment">// .vue 单文件组件</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">"path"</span>);  <span class="comment">// node 模块 处理路径逻辑</span></span><br><span class="line"><span class="keyword">const</span> htmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">"html-webpack-plugin"</span>);  <span class="comment">// 操作HTML</span></span><br><span class="line"><span class="keyword">const</span> openBrowserWebpackPlugin = <span class="built_in">require</span>(<span class="string">"open-browser-webpack-plugin"</span>); <span class="comment">// 打开浏览器</span></span><br><span class="line"><span class="keyword">const</span> extractTextWebpackPlugin = <span class="built_in">require</span>(<span class="string">"extract-text-webpack-plugin"</span>)  <span class="comment">// 抽离样式 样式独立出去</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry:[ <span class="string">"./src/main.js"</span>],</span><br><span class="line">    output:&#123;</span><br><span class="line">        path:path.resolve(__dirname,<span class="string">'dist'</span>),</span><br><span class="line">        filename:<span class="string">"js/[name].[hash:8].js"</span>,  <span class="comment">// 生成 hash规则解密解析的长度为8 的随机字符串  阻止浏览器缓存</span></span><br><span class="line">        publicPath:<span class="string">""</span>, <span class="comment">// 公共路径 上线需要配置</span></span><br><span class="line">    &#125;,</span><br><span class="line">    devtool:<span class="string">"source-map"</span>,</span><br><span class="line"></span><br><span class="line">    resolve:&#123;</span><br><span class="line">        alias:&#123;  <span class="comment">// 别名</span></span><br><span class="line">            <span class="string">'vue'</span>:<span class="string">'vue/dist/vue.js'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="built_in">module</span>:&#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#123;</span><br><span class="line">                test:<span class="regexp">/\.js$/</span>,</span><br><span class="line">                exclude:<span class="regexp">/node_modules/</span>,</span><br><span class="line">                use:[<span class="string">'babel-loader'</span>]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test:<span class="regexp">/\.(png|gif|svg|jpg|woff|woff2|eot|ttf)\??.*$/</span>,</span><br><span class="line">                use:[<span class="string">"url-loader?limit=8192&amp;name=font/[hash:8].[name].[ext]"</span>]   <span class="comment">// 8M  ext扩展名</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test:<span class="regexp">/\.(css|scss)$/</span>,</span><br><span class="line">                use:extractTextWebpackPlugin.extract(&#123;</span><br><span class="line">                    fallback:<span class="string">"style-loader"</span>,  <span class="comment">// 转化为 node 风格代码</span></span><br><span class="line">                    use:[  <span class="string">"css-loader"</span>,    <span class="comment">//  css 转化为 commonJs模块</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            loader:<span class="string">"postcss-loader"</span>,  <span class="comment">// 模块</span></span><br><span class="line">                            options:&#123;</span><br><span class="line">                                plugins:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                                    <span class="keyword">return</span> [</span><br><span class="line">                                        <span class="built_in">require</span>(<span class="string">"cssgrace"</span>), <span class="comment">// 美化 css</span></span><br><span class="line">                                        <span class="built_in">require</span>(<span class="string">"autoprefixer"</span>)() <span class="comment">// 自动补全 实现兼容</span></span><br><span class="line">                                    ]</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="string">"sass-loader"</span>   <span class="comment">//  编译 scss 为 css 代码</span></span><br><span class="line">                    ],</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test:<span class="regexp">/\.(css|less)$/</span>,</span><br><span class="line">                use:extractTextWebpackPlugin.extract(&#123;</span><br><span class="line">                    fallback:<span class="string">"style-loader"</span>,  <span class="comment">// 转化为 node 风格代码</span></span><br><span class="line">                    use:[  <span class="string">"css-loader"</span>,    <span class="comment">//  css 转化为 commonJs模块</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            loader:<span class="string">"postcss-loader"</span>,  <span class="comment">// 模块</span></span><br><span class="line">                            options:&#123;</span><br><span class="line">                                plugins:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                                    <span class="keyword">return</span> [</span><br><span class="line">                                        <span class="built_in">require</span>(<span class="string">"cssgrace"</span>), <span class="comment">// 美化 css</span></span><br><span class="line">                                        <span class="comment">// require('postcss-px2rem-exclude')(</span></span><br><span class="line">                                        <span class="comment">//     &#123;</span></span><br><span class="line">                                        <span class="comment">//         remUnit:100,</span></span><br><span class="line">                                        <span class="comment">//         exclude:/element-ui/i,  // 排除 mint-ui 不需要进行 rem 转换</span></span><br><span class="line">                                        <span class="comment">//     &#125;</span></span><br><span class="line">                                        <span class="comment">// ), // px 转 rem</span></span><br><span class="line">                                        <span class="built_in">require</span>(<span class="string">"autoprefixer"</span>)() <span class="comment">// 自动补全 实现兼容</span></span><br><span class="line">                                    ]</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="string">"less-loader"</span>   <span class="comment">//  编译 scss 为 css 代码</span></span><br><span class="line">                    ],</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test:<span class="regexp">/\.vue$/</span>,</span><br><span class="line">                loader:<span class="string">'vue-loader'</span>,</span><br><span class="line">                options:&#123;</span><br><span class="line">                    loaders:[</span><br><span class="line">                        &#123;<span class="string">'css'</span>:<span class="string">'style-loader!css-loader'</span>&#125;,</span><br><span class="line">                        &#123;<span class="string">'scss'</span>:<span class="string">'style-loader!css-loader!sass-loader'</span>&#125;,</span><br><span class="line">                        &#123;<span class="string">'less'</span>:<span class="string">'style-loader!css-loader!less-loader'</span>&#125;,</span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    devServer:&#123;</span><br><span class="line">        contentBase:path.join(__dirname,<span class="string">"dist"</span>),</span><br><span class="line">        compress:<span class="literal">true</span>,</span><br><span class="line">        hot:<span class="literal">true</span>,</span><br><span class="line">        inline:<span class="literal">true</span>,</span><br><span class="line">        host:<span class="string">"0.0.0.0"</span>,</span><br><span class="line">        port:<span class="number">7000</span>,</span><br><span class="line">        <span class="comment">// open:true,</span></span><br><span class="line">        publicPath:<span class="string">""</span>,</span><br><span class="line">        proxy:&#123;    <span class="comment">// 代理</span></span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// historyApiFallback:true  // 处理 history 路由模式</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    plugins:[</span><br><span class="line">        <span class="keyword">new</span> htmlWebpackPlugin(&#123;</span><br><span class="line">            template:<span class="string">"./src/index.html"</span>, <span class="comment">//声明 编译 HTML 文件</span></span><br><span class="line">            inject:<span class="literal">true</span>,  <span class="comment">// 自动注入 css/js link script</span></span><br><span class="line">        &#125;),</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> openBrowserWebpackPlugin(&#123;<span class="attr">url</span>:<span class="string">"http://localhost:7000"</span>&#125;),</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> extractTextWebpackPlugin(&#123;</span><br><span class="line">            filename:<span class="string">'css/app.[hash:8].css'</span>,</span><br><span class="line">            allChunks:<span class="literal">true</span> , <span class="comment">// 抽离所有的数据</span></span><br><span class="line">            disable:<span class="literal">false</span>   <span class="comment">// true 无法样式抽离</span></span><br><span class="line">        &#125;)</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4、新建工程文件夹"><a href="#4、新建工程文件夹" class="headerlink" title="4、新建工程文件夹"></a>4、新建工程文件夹</h4><p>结构如下：</p><p><img src="https://ws2.sinaimg.cn/small/006tNbRwly1fydglqncgij309y0f040n.jpg" alt="image-20181220195841691"></p><h4 id="5、需要下载的插件通过下面packjson-js即可全部下载"><a href="#5、需要下载的插件通过下面packjson-js即可全部下载" class="headerlink" title="5、需要下载的插件通过下面packjson.js即可全部下载"></a>5、需要下载的插件通过下面packjson.js即可全部下载</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"my-vue"</span>,</span><br><span class="line">  <span class="string">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="string">"description"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="string">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line">  <span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>,</span><br><span class="line">    <span class="string">"start"</span>: <span class="string">"webpack-dev-server --inline --hot"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"author"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="string">"license"</span>: <span class="string">"ISC"</span>,</span><br><span class="line">  <span class="string">"devDependencies"</span>: &#123;<span class="comment">//按照配置文件只能下载到14个插件(差less,sass-node,webpack@3.8.1)</span></span><br><span class="line">    <span class="string">"autoprefixer"</span>: <span class="string">"^9.4.3"</span>,</span><br><span class="line">    <span class="string">"babel-core"</span>: <span class="string">"^6.26.3"</span>,<span class="comment">//请使用本版本号 配置es6</span></span><br><span class="line">    <span class="string">"babel-loader"</span>: <span class="string">"^7.1.5"</span>,<span class="comment">//请使用本版本号 配置es6</span></span><br><span class="line">    <span class="string">"babel-preset-env"</span>: <span class="string">"^1.7.0"</span>, <span class="comment">//配置es6</span></span><br><span class="line">    <span class="string">"css-loader"</span>: <span class="string">"^2.0.1"</span>,</span><br><span class="line">    <span class="string">"cssgrace"</span>: <span class="string">"^3.0.0"</span>,</span><br><span class="line">    <span class="string">"extract-text-webpack-plugin"</span>: <span class="string">"^2.1.2"</span>,<span class="comment">//请使用本版本号</span></span><br><span class="line">    <span class="string">"file-loader"</span>: <span class="string">"^2.0.0"</span>, <span class="comment">//处理图片规则</span></span><br><span class="line">    <span class="string">"html-webpack-plugin"</span>: <span class="string">"^3.2.0"</span>,</span><br><span class="line">    <span class="string">"less"</span>: <span class="string">"^3.9.0"</span>,</span><br><span class="line">    <span class="string">"less-loader"</span>: <span class="string">"^4.1.0"</span>,</span><br><span class="line">    <span class="string">"node-sass"</span>: <span class="string">"^4.11.0"</span>,</span><br><span class="line">    <span class="string">"open-browser-webpack-plugin"</span>: <span class="string">"^0.0.5"</span>,</span><br><span class="line">    <span class="string">"postcss-loader"</span>: <span class="string">"^3.0.0"</span>,</span><br><span class="line">    <span class="string">"postcss-px2rem-exclude"</span>: <span class="string">"^0.0.6"</span>,<span class="comment">//手机端rem转换</span></span><br><span class="line">    <span class="string">"sass-loader"</span>: <span class="string">"^7.1.0"</span>,</span><br><span class="line">    <span class="string">"source-map"</span>: <span class="string">"^0.7.3"</span>,</span><br><span class="line">    <span class="string">"style-loader"</span>: <span class="string">"^0.23.1"</span>,</span><br><span class="line">    <span class="string">"url-loader"</span>: <span class="string">"^1.1.2"</span>,<span class="comment">//处理图片规则</span></span><br><span class="line">    <span class="string">"vue-loader"</span>: <span class="string">"^13.7.1"</span>,<span class="comment">//请使用本版本号</span></span><br><span class="line">    <span class="string">"vue-template-compiler"</span>: <span class="string">"^2.5.17"</span>,<span class="comment">//请使用本版本号，与vue版本对应</span></span><br><span class="line">    <span class="string">"webpack"</span>: <span class="string">"^3.8.1"</span>,<span class="comment">//请使用本版本号</span></span><br><span class="line">    <span class="string">"webpack-dev-server"</span>: <span class="string">"^2.9.3"</span><span class="comment">//热替换</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="string">"axios"</span>: <span class="string">"^0.18.0"</span>,</span><br><span class="line">    <span class="string">"element-ui"</span>: <span class="string">"^2.4.11"</span>,</span><br><span class="line">    <span class="string">"vue"</span>: <span class="string">"^2.5.17"</span>,<span class="comment">//请使用本版本号</span></span><br><span class="line">    <span class="string">"vue-resource"</span>: <span class="string">"^1.5.1"</span>,</span><br><span class="line">    <span class="string">"vue-router"</span>: <span class="string">"^3.0.2"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>资源链接</p><ol><li><a href="https://webpack.js.org/concepts/#output" target="_blank" rel="noopener">https://webpack.js.org/concepts/#output</a></li><li><a href="http://element-cn.eleme.io/#/zh-CN/component/container" target="_blank" rel="noopener">http://element-cn.eleme.io/#/zh-CN/component/container</a></li><li><a href="https://cn.vuejs.org/v2/guide/single-file-components.html" target="_blank" rel="noopener">https://cn.vuejs.org/v2/guide/single-file-components.html</a></li><li><a href="https://www.mayn.com.cn/html/index.htm" target="_blank" rel="noopener">https://www.mayn.com.cn/html/index.htm</a></li><li><a href="https://www.giorgioarmanibeauty.cn/make_up/" target="_blank" rel="noopener">https://www.giorgioarmanibeauty.cn/make_up/</a></li><li><a href="http://element-cn.eleme.io/#/zh-CN/component/dropdown（PC）" target="_blank" rel="noopener">http://element-cn.eleme.io/#/zh-CN/component/dropdown（PC）</a></li><li><a href="http://mint-ui.github.io/docs/#/zh-cn2/action-sheet（phone）" target="_blank" rel="noopener">http://mint-ui.github.io/docs/#/zh-cn2/action-sheet（phone）</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webpack 使用</title>
      <link href="/2019/04/24/webpack-use/"/>
      <url>/2019/04/24/webpack-use/</url>
      
        <content type="html"><![CDATA[<blockquote><p>  <a href="http://webpack.github.io/" target="_blank" rel="noopener">webpack</a>是近期最火的一款模块加载器兼打包工具，它能把各种资源，例如JS（含JSX  javascript xml）、coffee、样式（含less/sass）、图片等都作为模块来使用和处理。</p><p>  文档地址：<a href="http://webpack.github.io/docs/" target="_blank" rel="noopener">http://webpack.github.io/docs/</a></p><p>  使用<strong>loader</strong>转换文件</p></blockquote><p><strong>记住三点，入口(entry)，出口(output)，规则(loader)</strong></p><p>规则就是用相应的loader模块打包相应的文件。</p><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><ol><li><p>webpack 是以 commonJS 的形式来书写脚本的，但对 AMD/CMD 的支持也很全面，方便旧项目进行代码迁移。</p><blockquote><p>  <strong>AMD</strong>[Asynchromous Module Definition]:RequireJS 在推广过程中对模块定义的规范化产出。</p><p>  <strong>CMD</strong>[Common Module defined]:SeaJS 在推广过程中对模块定义的规范化产出。</p><p>  <strong>CommonJS规范</strong></p><p>  作用：让js不仅可以运行在浏览器端，还可以运行在服务器端。</p><p>  <strong>CommonJS定义的模块分为:</strong></p><p>  {模块引用(require)} -&gt;require()用来引入外部模块</p><p>  {模块导出(exports)}-&gt;exports对象用于导出当前模块的方法或变量，唯一的导出口</p><p>  {模块标识(module)} defined -&gt;module对象就代表模块本身</p></blockquote></li><li><p>能被模块化的不仅仅是 JS 了。png  coffee  less&amp;sass</p></li><li><p>开发便捷，能替代部分 grunt/gulp 的工作，比如打包、压缩混淆、图片转base64等。</p></li><li><p>扩展性强，插件机制完善，特别是支持 React 热插拔（见 react-hot-loader ）的功能让人眼前一亮</p></li></ol><h4 id="安装及使用"><a href="#安装及使用" class="headerlink" title="安装及使用"></a>安装及使用</h4><ul><li><p>安装</p><ol><li><code>mkdir course-webpack</code>(不要大写P)</li><li><code>cd course-webpack</code></li><li><code>npm init</code></li><li>全局安装<code>cnpm i webpack@3.8.1 -g</code>  (3.8.1版本的稳定)</li><li>开发依赖<code>cnpm i webpack@3.8.1 -D</code></li><li>安装css项目打包</li></ol></li><li><p>使用</p><ol><li><p><code>cnpm i css-loader style-loader -D</code>安装支持css的打包坏境</p><p><code>require(&#39;style!css!./style.css&#39;)</code>style与css的位置不能变</p></li><li><p><code>cnpm i sass-loader node-sass -D</code></p><p>文件名后缀为<code>.scss</code></p></li><li><p><code>cnpm i less less-loader -D</code></p><p>文件名后缀为<code>.less</code></p></li><li><p>最后使用命令<code>webpack ***.*** bundle.js</code>将把暴露出来的各种文件打包到bundle.js里</p><p><code>bundle： 捆; 包袱; 捆绑</code>w</p></li></ol></li></ul><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ol><li><p>新建<code>webpack.config.js</code>文件（webpack配置文件）。写入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack 配置文件</span></span><br><span class="line"><span class="comment">// 入口 entry</span></span><br><span class="line"><span class="comment">// 出口  output</span></span><br><span class="line"><span class="comment">// 规则  loader   module</span></span><br><span class="line"><span class="comment">// 插件  plugins</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// js css/scss/less  png vue</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: <span class="string">"./entry.js"</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    filename: <span class="string">"bundle.js"</span>,</span><br><span class="line">    path: __dirname <span class="comment">//双下划线</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [&#123;</span><br><span class="line">      test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">      use: [<span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>]</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      test: <span class="regexp">/\.scss$/</span>,</span><br><span class="line">      use: [<span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>, <span class="string">'sass-loader'</span>]</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">      use: [<span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>, <span class="string">'less-loader'</span>]</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">      exclude: <span class="regexp">/node_modules/</span>, <span class="comment">// 不会去 node_modules 搜索 打包文件</span></span><br><span class="line">      use: [</span><br><span class="line">        <span class="string">"babel-loader"</span></span><br><span class="line">      ]</span><br><span class="line">    &#125;]</span><br><span class="line">  &#125;,</span><br><span class="line">  devtool: <span class="string">"source-map"</span>, <span class="comment">// 方便开发者调试</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>配置规则(js可能需要配置es6，有的浏览器不识别es6语法)</p><ol><li><p><code>cnpm i babel-loader@7.1.5 babel-core@6.26.3 babel-preset-env -D</code></p></li><li><p>新建<code>.babelrc</code> 填写：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"presets"</span>:[<span class="string">"env"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>配置规则在<code>webpack.config.js</code>写入<code>.js</code>的配置规则（上面已写）</p></li></ol></li><li><p>热替换</p><ol><li><code>cnpm i webpack-dev-server@2.9.3 -g</code></li><li><code>cnpm i webpack-dev-server@2.9.3 -D</code></li><li>在packjson中添加<code>&quot;start&quot;:&quot;webpack-dev-server --inline --hot --open&quot;</code></li></ol></li><li><p>下载<code>source-map</code></p><p>下载后配置 <code>devtool: &quot;source-map&quot;, // 方便开发者调试</code></p></li></ol><h3 id="webpack内各种文件的书写"><a href="#webpack内各种文件的书写" class="headerlink" title="webpack内各种文件的书写"></a>webpack内各种文件的书写</h3><ol><li><p><code>.css</code>文件</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: darkgreen;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">4px</span> solid darkorange;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">60px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>.scss</code></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$base_color</span>:yellow;</span><br><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="variable">$base_color</span>;</span><br><span class="line">    <span class="attribute">color</span>:blue;</span><br><span class="line">    <span class="selector-tag">div</span>&#123;</span><br><span class="line">        <span class="attribute">border</span>:<span class="number">4px</span> solid darkorange;</span><br><span class="line">        <span class="attribute">font-size</span>:<span class="number">60px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>.less</code></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@base_color:</span>yellowgreen;</span><br><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="variable">@base_color</span>;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">    <span class="selector-tag">div</span>&#123;</span><br><span class="line">        <span class="attribute">border</span>:<span class="number">4px</span> solid darkorange;</span><br><span class="line">        <span class="attribute">font-size</span>:<span class="number">60px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>.js</code>（下面包含部分es6)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="string">"vue"</span>,<span class="string">"react"</span>,<span class="string">"angular4.0"</span>];</span><br><span class="line"><span class="keyword">let</span> word = <span class="string">"天道酬勤!!!"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 解构导出</span></span><br><span class="line">exports.arr = arr;</span><br><span class="line"></span><br><span class="line">exports.word = word;</span><br><span class="line"></span><br><span class="line"><span class="comment">// module.exports = "hello everyone";</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// js文件 无需打包  本身就是模块</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 模块导出</span></span><br><span class="line"><span class="comment">// module.exports = &#123;&#125;</span></span><br><span class="line"><span class="comment">// exports.a = a;</span></span><br></pre></td></tr></table></figure></li><li><p>入口文件<code>entry.js</code>(需新建)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"这是 入口文件 ..."</span>);</span><br><span class="line"><span class="comment">//  ./ 表示同级文件  ../  上一级文件  __dirname</span></span><br><span class="line"><span class="comment">// var &#123;arr,word&#125; = require("./name");</span></span><br><span class="line"><span class="keyword">import</span> &#123;arr,word&#125; <span class="keyword">from</span> <span class="string">"./name"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// import obj from "./es6";</span></span><br><span class="line"><span class="comment">// console.log(obj);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123;msg,hello&#125; <span class="keyword">from</span> <span class="string">"./es6"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"app"</span>).innerHTML += <span class="string">"hello - webpack"</span>  +  word  + arr[<span class="number">0</span>] + <span class="string">"&lt;h2&gt;"</span>+msg+<span class="string">"&lt;/h2&gt;"</span> + hello;</span><br><span class="line"></span><br><span class="line"><span class="comment">// require("style-loader!css-loader!./style.css");</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// require("style-loader!css-loader!sass-loader!./demo.scss");</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// require("style-loader!css-loader!less-loader!./index.less");</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// require("./style.css");</span></span><br><span class="line"><span class="comment">// require("./demo.scss");</span></span><br><span class="line"><span class="comment">// require("./index.less");</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">"./demo.scss"</span>;</span><br></pre></td></tr></table></figure></li><li><p>出口文件webpack编译后<code>bundle.js</code>（需新建）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"这是 入口文件 ..."</span>);</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li><li><p><code>index.html</code>文件引入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"bundle.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webpack </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
